<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>articles@mdhweekly.com</id>
    <title>MDH Weekly · 深度好文</title>
    <updated>2023-04-13T04:41:46.876Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mdhweekly.com"/>
    <subtitle>深度好文 from MDH Weekly</subtitle>
    <rights>sorrycc@gmail.com</rights>
    <entry>
        <title type="html"><![CDATA[Replit 部署 - 从想法到生产的最快方式]]></title>
        <id>https://blog.replit.com/deployments-launch</id>
        <link href="https://blog.replit.com/deployments-launch"/>
        <updated>2023-04-13T04:39:32.564Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.replit.com/deployments-launch">Replit Deployments - the fastest way from idea → production</a></p><p><strong>概要：</strong></p><p>Replit has launched its Deployments feature, which separates development and production environments to allow users to work on their app without affecting live users. It also enables users to add features and fix bugs and only deploy to users when ready. The feature includes isolated VM resources for improved security and performance, custom domain linking, and control over when apps are released to users. Replit Deployments is built on Google Cloud Platform and offers industry-leading security features such as data encryption in transit and at rest. The company is planning to add more features in the coming weeks and months.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[用 LLM 替换我的最好的朋友，训练了 50 万个群聊消息]]></title>
        <id>https://www.izzy.co/blogs/robo-boys.html</id>
        <link href="https://www.izzy.co/blogs/robo-boys.html"/>
        <updated>2023-04-13T04:16:32.348Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.izzy.co/blogs/robo-boys.html">Replacing my best friends with an LLM trained on 500,000 group chat messages</a></p><p><strong>概要：</strong></p><p>作者用一个大型语言模型训练了他和他的好友们在大学时期使用的聊天记录，并通过 Modal 和 Hex 完成了这个项目。作者将原始聊天数据转换成了可供微调的格式，然后使用 LLaMa 进行微调。最终，作者将模型部署到了 Modal 上，并建立了一个类似于 iMessage 的前端界面，使得所有人都可以与 “机器人男孩” 聊天。作者强烈鼓励大家尝试这种无聊但复杂的 AI 项目，因为它是一个入门级别的 AI 项目，可以让你更深入地了解 LLMs 以及如何针对特定场景进行微调。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RFC：`next/third-parties`・vercel/next.js・讨论 #48256]]></title>
        <id>https://github.com/vercel/next.js/discussions/48256</id>
        <link href="https://github.com/vercel/next.js/discussions/48256"/>
        <updated>2023-04-13T00:21:35.665Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/vercel/next.js/discussions/48256">RFC: `next/third-parties` · vercel/next.js · Discussion #48256</a></p><p><strong>概要：</strong></p><p>Next.js 计划推出 next/third-parties 包，以简化开发人员在应用程序中加载流行第三方库的体验。该包将提供预配置的包装器组件，以确保流行的第三方资源能够高效加载，并随着最佳实践的演变而持续高效。为了避免增加 Next.js 的安装 / 包大小，这个包可以单独存在于核心 next 库之外，但仍然在同一个 monorepo 中。此外，Next.js 还将考虑支持其他流行的第三方库，例如 Sentry、DataDog 和 Facebook Pixel。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何快速制作「九宫格」拼图：基于 ImageMagick 和快捷指令的方案 | 少数派会员 π+Prime]]></title>
        <id>https://sspai.com/prime/story/tile-cropping-magick-shortcuts</id>
        <link href="https://sspai.com/prime/story/tile-cropping-magick-shortcuts"/>
        <updated>2023-04-13T00:21:18.160Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://sspai.com/prime/story/tile-cropping-magick-shortcuts">怎样快速制作「九宫格」拼图：基于 ImageMagick 和快捷指令的方案 ｜ 少数派会员  π+Prime</a></p><p><strong>概要：</strong></p><p>本文介绍如何通过 ImageMagick 或快捷指令，简单免费地制作九宫格拼图。九宫格的制作往往需要第三方软件辅助，也是乱收费和侵犯隐私的重灾区。作者推荐基于 ImageMagick 的终端脚本版本；快捷指令版本可以作为 iOS 平台的后备方案。其中，-background 用来指定背景色，可以是颜色名称、HEX 值或 RGB 值等，不指定则默认用白色。-margin 用来指定四周的额外留白，接受的值是相对于原图长边的百分比，不指定则默认不额外留白。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub - shadcn/taxonomy：一个使用新路由器、服务器组件和 Next.js 13 中的所有新功能构建的开源应用程序。]]></title>
        <id>https://github.com/shadcn/taxonomy</id>
        <link href="https://github.com/shadcn/taxonomy"/>
        <updated>2023-04-13T00:18:33.348Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/shadcn/taxonomy">GitHub - shadcn/taxonomy: An open source application built using the new router, server components and everything new in Next.js 13.</a></p><p><strong>概要：</strong></p><p>这是一个使用 Next.js 13 和服务器组件构建的开源应用程序，包括身份验证、订阅、API 路由、静态页面等功能。作者正在使用此项目作为实验来测试现代应用程序在 Next.js 13 和服务器组件中的工作方式。该应用程序使用 Radix UI 构建 UI 组件，使用 Prisma ORM 管理数据库，使用 Stripe 实现订阅功能，并使用 Zod 进行验证。目前还存在一些问题，例如 GitHub 身份验证不可用，但作者会继续更新并改进该应用程序。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布 v1.32.0・microsoft/playwright]]></title>
        <id>https://github.com/microsoft/playwright/releases/tag/v1.32.0</id>
        <link href="https://github.com/microsoft/playwright/releases/tag/v1.32.0"/>
        <updated>2023-04-13T00:16:33.115Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/microsoft/playwright/releases/tag/v1.32.0">Release v1.32.0 · microsoft/playwright</a></p><p><strong>概要：</strong></p><p>Playwright v1.32 发布了 UI Mode（预览版），该模式允许您探索、运行和调试测试，并带有内置的观察模式。新的 API 包括页面.routeFromHAR () 和 browserContext.routeFromHAR () 中的选项 option: updateMode 和 option: updateContent，以及 TestInfo.testId 的新属性和 Tracing.startChunk () 方法中的新选项名称。注意：组件测试有一个重大变化，现在 @playwright/experimental-ct-react 仅支持 React 18。此版本还针对以下稳定通道进行了测试：Google Chrome 111 和 Microsoft Edge 111。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 WordPress Playground 和 WebAssembly 在浏览器中构建 WordPress 体验 - Chrome 开发者]]></title>
        <id>https://developer.chrome.com/en/blog/wordpress-playground/</id>
        <link href="https://developer.chrome.com/en/blog/wordpress-playground/"/>
        <updated>2023-04-13T00:06:26.166Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://developer.chrome.com/en/blog/wordpress-playground/">Build in-browser WordPress experiences with WordPress Playground and WebAssembly - Chrome Developers</a></p><p><strong>概要：</strong></p><p>WordPress Playground 是一个完整的 WordPress 技术堆栈，包括 PHP 和数据库，直接在浏览器中运行。用户可以免费使用和定制嵌入在 playground.wordpress.net 上的 WordPress。此外，用户还可以将 WordPress Playground 嵌入到应用程序中，并使用 JavaScript 进行控制。该文章介绍了 WordPress Playground 如何帮助 WordPress 开发人员、它是如何工作的以及它对 WordPress 未来的意义。WordPress Playground 还支持 WebAssembly PHP，这使得用户可以在不安装 WordPress 的情况下使用它。最后，该文章提出了未来可能出现的一些新功能，例如交互式教程、多人编辑会话、分布式 WordPress 等。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Replit 赏金：打造和推出 MVP 的最佳场所]]></title>
        <id>https://blog.replit.com/bounties-nat-dev</id>
        <link href="https://blog.replit.com/bounties-nat-dev"/>
        <updated>2023-04-12T04:39:27.047Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.replit.com/bounties-nat-dev">Replit Bounties: The Best Place to Build and Launch MVPs</a></p><p><strong>概要：</strong></p><p>Nat Friedman, former CEO of GitHub, has launched a new project called nat.dev, a playground for developers to test and compare different large language models (LLMs). The project was created through Replit Bounties, a marketplace where anyone can work with software creators from the Replit community. Zain Huda, a software engineer at Meta, was selected as the developer to execute the full vision for the bounty after impressing Friedman with a working prototype of his vision. The website went on to become the most popular LLM-comparison tool in February 2023 and the team had to implement a credit system to mitigate costs. In April 2023, Nat open sourced the code to allow others to build their own playgrounds.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DRY vs SoC，一个艰难的选择 | Swizec Teller]]></title>
        <id>https://swizec.com/blog/dry-vs-soc-a-difficult-choice/</id>
        <link href="https://swizec.com/blog/dry-vs-soc-a-difficult-choice/"/>
        <updated>2023-04-12T04:38:08.724Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://swizec.com/blog/dry-vs-soc-a-difficult-choice/">DRY vs SoC, a difficult choice | Swizec Teller</a></p><p><strong>概要：</strong></p><p>本文探讨了软件工程中两个重要的概念：DRY（不要重复自己）和 SoC（关注点分离）。作者指出，这两个概念并不是针对代码的规则，而是针对概念的规则。在应用这些概念时，需要关注的是业务概念是否相同，如果相同则可以使用 DRY，否则需要进行关注点分离。作者还提供了一些示例来说明如何应用这些概念。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[3.4 · Nuxt]]></title>
        <id>https://nuxt.com/blog/v3-4</id>
        <link href="https://nuxt.com/blog/v3-4"/>
        <updated>2023-04-12T04:20:53.077Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://nuxt.com/blog/v3-4">Nuxt 3.4 · Nuxt</a></p><p><strong>概要：</strong></p><p>Nuxt.js, the open-source framework for building Vue.js applications, has released version 3.4, which includes experimental support for Chromium-based browsers' new View Transitions API. This allows native browser transitions between unrelated elements on different pages. The release also features enhanced payload handling, including support for rich JavaScript types such as regular expressions, dates, Map and Set and BigInt, as well as NuxtError and Vue-specific objects like ref, reactive, shallowRef and shallowReactive. Other upgrades include better context transforms, object-syntax Nuxt plugins, and improvements to layers.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[GitHub - ds300/lazyrepo: 用于 npm/pnpm/yarn monorepos 的缓存任务运行器。]]></title>
        <id>https://github.com/ds300/lazyrepo</id>
        <link href="https://github.com/ds300/lazyrepo"/>
        <updated>2023-04-11T13:28:51.241Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/ds300/lazyrepo">GitHub - ds300/lazyrepo: Caching task runner for npm/pnpm/yarn monorepos.</a></p><p><strong>概要：</strong></p><p>lazyrepo 是一个针对 npm/pnpm/yarn monorepos 的零配置缓存任务运行器。它适合于 turborepo 所开创的领域：使 package.json “scripts” 扩展，而无需采用像 nx、bazel、rush 或 buck 这样的大型工业级构建系统。lazyrepo 非常快速，尽管它是用 TypeScript 编写而不是一些年轻、英俊、聪明、有趣的系统语言，但它比 turborepo 要快得多。除了性能之外，lazyrepo 还带来了一些重要的生活质量改善。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何成为一名 - 10x 工程师]]></title>
        <id>https://taylor.town/-10x</id>
        <link href="https://taylor.town/-10x"/>
        <updated>2023-04-07T04:26:48.406Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://taylor.town/-10x">How to be a -10x Engineer</a></p><p><strong>概要：</strong></p><p>本文指出，虽然 “10 倍工程师” 可能是神话，但确实存在 “-10 倍工程师”。为了成为一名 “-10 倍工程师”，可以采用以下策略：使 10 个工程师的输出无效；尽可能在开发过程中更改需求以避免责任；创建 400 小时的忙碌工作；让团队执行类似于工作的任务；创建毫无意义的仪式等。此外，还可以浪费 400 小时的编译 / 构建时间，编写毫无意义的测试，将 10 个工程师困在技术讨论中等等。文章最后呼吁不要雇佣 “0 倍工程师” 和 “-1 倍工程师”，并且不要阻止 “-1 倍工程师” 被解雇。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[程序员被打断：中断和上下文切换的真正成本]]></title>
        <id>https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/</id>
        <link href="https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/"/>
        <updated>2023-04-07T04:23:25.035Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://contextkeeper.io/blog/the-real-cost-of-an-interruption-and-context-switching/">Programmer Interrupted: The Real Cost of Interruption and Context Switching</a></p><p><strong>概要：</strong></p><p>编程中的中断和上下文切换是直接影响程序员日常生产力的两个最昂贵因素。虽然没有永久避免它们的方法，但有一些有趣的策略可以最小化它们的影响。根据各种科学研究，经过中断后需要至少 10-15 分钟才能重新进入 “区域”（Parnin:10，vanSolingen:98）。基于任务的复杂性和你的精神能量，肯定需要更多的时间。当你有很多未完成的代码时，中断发生时，返回到流状态可能会更具挑战性。在编程人员中，这个概念是众所周知的，但可能只有少数人听说过双钟表匠寓言，它完美地捕捉了所有这些细节，即使对于非程序员来说也是如此。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js 13.3]]></title>
        <id>https://nextjs.org/blog/next-13-3</id>
        <link href="https://nextjs.org/blog/next-13-3"/>
        <updated>2023-04-07T02:03:49.198Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://nextjs.org/blog/next-13-3">Next.js 13.3</a></p><p><strong>概要：</strong></p><p>Next.js 13.3 发布，新增了社区请求的流行功能，包括：基于文件的元数据 API、动态 Open Graph 图像、应用程序路由器的静态导出、并行路由和拦截等。其中，基于文件的元数据 API 可以方便地自定义页面以改善 SEO 和 Web 共享；动态 Open Graph 图像可以使用 JSX、HTML 和 CSS 生成 OG 图像；应用程序路由器的静态导出支持完全静态导出，可避免在客户端加载不必要的 JavaScript 代码，减小捆绑大小并实现更快的页面加载；并行路由和拦截可以同时在同一视图中呈现一个或多个页面，如复杂的仪表板或模态框。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chrome 推出 WebGPU - Chrome 开发者]]></title>
        <id>https://developer.chrome.com/blog/webgpu-release/</id>
        <link href="https://developer.chrome.com/blog/webgpu-release/"/>
        <updated>2023-04-06T12:38:50.463Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://developer.chrome.com/blog/webgpu-release/">Chrome ships WebGPU - Chrome Developers</a></p><p><strong>概要：</strong></p><p>Chrome 团队宣布，WebGPU 现在默认在 Chrome 113 中可用，目前处于 Beta 渠道。WebGPU 是一种新的 Web 图形 API，提供了显著的优势，例如相同图形的 JavaScript 工作量大大减少，机器学习模型推断提高了三倍以上。这是由于更灵活的 GPU 编程和访问 WebGL 无法提供的高级功能。此次 WebGPU 的首次发布可在 ChromeOS、macOS 和 Windows 上使用，其他平台的支持将在今年晚些时候推出。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chakra UI 的未来]]></title>
        <id>https://www.adebayosegun.com/blog/the-future-of-chakra-ui</id>
        <link href="https://www.adebayosegun.com/blog/the-future-of-chakra-ui"/>
        <updated>2023-04-06T12:32:22.229Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.adebayosegun.com/blog/the-future-of-chakra-ui">The future of Chakra UI</a></p><p><strong>概要：</strong></p><p>Chakra UI is a popular open-source component library for building accessible user interfaces (UIs) with React. The project's creator, Segun Adebayo, has announced plans to transition Chakra UI into a "Design System Infrastructure" to meet the changing expectations of component libraries. The plan includes breaking down the monolithic codebase into smaller, independent projects that are framework-agnostic and easy to maintain. Some of the new projects include Panda, a zero-runtime CSS-in-JS system; Zag, a low-level state machine library used to build all the components in Chakra UI; Ark, a headless component library based on Zag.js; and Ultra, a SaaS platform for creating, managing, and distributing design tokens.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么你今天应该写一篇博客文章]]></title>
        <id>https://dzone.com//articles/why-you-should-write-blog-post</id>
        <link href="https://dzone.com//articles/why-you-should-write-blog-post"/>
        <updated>2023-04-06T12:28:53.407Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://dzone.com//articles/why-you-should-write-blog-post">Why You Should Write a Blog Post Today</a></p><p><strong>概要：</strong></p><p>本文列举了维护博客的几个原因，包括技术备忘录、分享知识、职业简历、记录人生和保持联系等。博客可以成为你未来自己的技术备忘录，也可以与他人分享你的发现，同时也是展示你职业能力和价值观的一个平台。此外，博客还可以成为记录你人生的一部分，帮助你保持与远方朋友的联系。无论如何，开始写博客吧，即使你认为自己没有什么好写的或者不够好的写手。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023 年从两个角度学习 React]]></title>
        <id>https://www.robinwieruch.de/learning-react/</id>
        <link href="https://www.robinwieruch.de/learning-react/"/>
        <updated>2023-04-05T08:20:21.736Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.robinwieruch.de/learning-react/">Learning React from two Angles in 2023</a></p><p><strong>概要：</strong></p><p>本文讨论了如何在 2023 年学习 React，提出了两种不同的方法：作为一个库或者作为一个框架。新版 React 文档建议使用完全集成的框架（例如 Next.js）而不是像 Vite 或 Parcel 这样的打包工具来使用 React。作者认为，在完全转向框架之前，仍然推荐使用其他 React 入门工具。文章还回顾了过去 10 年 Web 应用程序发展的历程，从服务器端渲染到客户端渲染再到现在的服务器端渲染。最后，作者建议初学者既要学习 React 的基础知识，也要学习如何将其应用于框架中。可以先从框架开始，但遇到 React 的基础知识时，需要回到 React 的文档中去学习。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[从 Webpack 迁移到 Remix]]></title>
        <id>https://remix.run/blog/migrate-from-webpack</id>
        <link href="https://remix.run/blog/migrate-from-webpack"/>
        <updated>2023-04-05T00:43:08.586Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://remix.run/blog/migrate-from-webpack">Migrate from Webpack to Remix</a></p><p><strong>概要：</strong></p><p>Remix 宣布推出基于 Webpack 的编译器和开发服务器，以帮助使用 Webpack 的应用程序逐步迁移到 Remix。该公司表示，这个演示版本可以让用户从第一天开始使用所有的 Webpack 加载器和插件，并逐渐将每个路由迁移到 Remix。Remix 表示，它正在积极支持更多流行的 CSS 模式，但目前还有细节和权衡需要解决，以确保不会影响 Remix 的默认性能。Remix 还提供了一个迁移指南，以帮助 Webpack 用户更容易地进行迁移。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微软从头开始重建了 Teams，承诺提供 2 倍更快的性能。]]></title>
        <id>https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/</id>
        <link href="https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/"/>
        <updated>2023-04-04T06:17:50.245Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/">Microsoft rebuilt Teams from the ground up, promises 2x faster performance</a></p><p><strong>概要：</strong></p><p>微软的团队协作工具 Teams 一直以来都因其运行速度慢、资源占用高而声名狼藉。现在，微软推出了全新的 Teams 预览版，微软称这是 “从头重新构想的 Teams”，承诺新应用程序的性能将提高两倍，同时只使用以前的一半内存。加入会议现在应该会快 2 倍，而在聊天和频道之间切换将快 1.7 倍。此外，公司还重新设计了整体用户体验。微软在 1 月份发布的财报中指出，Teams 现在拥有 2.8 亿月活跃用户，这比 2021 年 7 月的 2.5 亿和 2022 年 1 月的 2.7 亿都要多。该公司计划在今年晚些时候向所有用户提供这个新版本的 Teams，但现在正在向选择公司公共预览计划的 Windows 用户推出（尽管管理员可能需要为您的组织启用此功能）。一旦启用，用户可以轻松地在新旧版本之间切换。微软</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 的黄金法则]]></title>
        <id>https://steveklabnik.com/writing/rusts-golden-rule</id>
        <link href="https://steveklabnik.com/writing/rusts-golden-rule"/>
        <updated>2023-04-02T14:09:41.420Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://steveklabnik.com/writing/rusts-golden-rule">Rust's Golden Rule</a></p><p><strong>概要：</strong></p><p>本文介绍了 Rust 的一个设计原则：签名即契约。这个原则指出，当函数体与函数签名相矛盾时，函数签名优先；签名是正确的，函数体是错误的。这个原则使得 Rust 具有模块化和内存安全等优点，但也导致一些问题，如 “借用分裂” 或 “部分借用”。作者认为，这个原则让他在解决问题时更关注函数签名而不是函数体，同时也影响了类型之间的关系和测试驱动开发。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于我的演讲风格的一些想法]]></title>
        <id>https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/</id>
        <link href="https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/"/>
        <updated>2023-04-02T14:09:25.134Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/">Some thoughts on my presentation style</a></p><p><strong>概要：</strong></p><p>这篇文章总结了演讲者如何制作幻灯片，作者的目标是确保每张幻灯片都传达一个概念。他使用单个句子或图像作为背景来实现这一点，并将演讲分成许多小的、独立的 “块”，以便听众可以在下一个块到来时重新定位自己。此外，作者还手绘了所有的图表，并使用了 Deckset 工具生成幻灯片。最后，作者建议演讲者在演讲中引起观众的情感共鸣，而不是试图传达过多的信息。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[头脑风暴提出问题，而不是想法 —— 骡子设计]]></title>
        <id>https://www.muledesign.com/blog/brainstorm-questions</id>
        <link href="https://www.muledesign.com/blog/brainstorm-questions"/>
        <updated>2023-04-02T13:51:07.934Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.muledesign.com/blog/brainstorm-questions">Brainstorm Questions Not Ideas — Mule Design</a></p><p><strong>概要：</strong></p><p>本文指出，我们过分高估了设计中 “想法” 的重要性。有意义的创新建立在对现有概念、对象和情境的新颖联系上，而不是为了自我满足的原创性。我们所赞美的闪光点通常是对世界的敏锐观察，通过批判性思维和评论得到改进。然而，因为许多人在学校和职业生涯中都因为有正确答案和聪明的想法而受到奖励和称赞，设计中的质疑和评论可能会变得非常不舒服。因此，与其沉浸在群体思维的舒适枕头中，还不如开始提出问题。一个快速有效的解决方法是停止与团队一起集思广益，而是开始一起集思广益提出问题。本文提供了一些运行对话的步骤。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[介绍 Socket AI - ChatGPT 驱动的威胁分析 - Socket]]></title>
        <id>https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis</id>
        <link href="https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis"/>
        <updated>2023-04-01T05:32:32.600Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis">Introducing Socket AI – ChatGPT-Powered Threat Analysis - Socket</a></p><p><strong>概要：</strong></p><p>Socket 宣布推出基于人工智能的源代码分析解决方案，利用 ChatGPT 检查每个 npm 和 PyPI 包。当检测到包中存在潜在问题时，Socket 会将其标记并请求 ChatGPT 对其进行总结。Socket 的 AI 警告应视为建议而非绝对分析，因为 LLMs 的限制意味着跨文件分析等任务仍需持续改进。此外，Socket 还在不断增强静态分析功能，未来预计将进一步整合 LLMs，实现更复杂的 AI 引导分析。Socket 希望通过集中分析，为开发者提供最大的受益和保护，并以最小的成本摊销运行 AI 分析所有共享开源依赖项的费用。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 遮罩 - Ahmad Shadeed]]></title>
        <id>https://ishadeed.com/article/css-masking/</id>
        <link href="https://ishadeed.com/article/css-masking/"/>
        <updated>2023-04-01T05:23:43.789Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://ishadeed.com/article/css-masking/">CSS Masking - Ahmad Shadeed</a></p><p><strong>概要：</strong></p><p>本文介绍了 CSS 遮罩的定义、用法和几个实际应用案例。遮罩是一种隐藏元素部分内容而不删除它的技术，可以使用形状或渐变来显示或隐藏元素的部分内容。在 CSS 中，有几种方法可以遮罩元素，包括 mask 属性、clip-path 属性和 SVG <mask>。本文主要关注 mask 属性，它类似于 background 属性，并且可以使用图像和渐变进行遮罩。作者提供了许多实际应用案例，包括淡化图像、遮罩文本内容、遮罩列表、有趣的图像效果等。最后，作者推荐了一些进一步学习 CSS 遮罩的资源。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你并不太老（转向人工智能）]]></title>
        <id>https://www.latent.space/p/not-old</id>
        <link href="https://www.latent.space/p/not-old"/>
        <updated>2023-04-01T05:21:47.837Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.latent.space/p/not-old">You Are Not Too Old (To Pivot Into AI)</a></p><p><strong>概要：</strong></p><p>本文讨论了职业转型的话题，特别是在人工智能领域。作者分享了自己从金融行业转型到软件工程和开发者关系的经历，并提出了一些原因，说明为什么你不会太老而无法进行职业转型。首先，人工智能领域的潜力非常广泛，增长速度很快。其次，学习人工智能的时间比你想象的要短。第三，除了成为专业机器学习研究员外，还有其他许多贡献领域，例如软件工程和产品化。最后，挑战自己对大脑有益，可以帮助建立认知储备，防止神经退行性疾病的发生。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qwik 达到了 RC 里程碑。]]></title>
        <id>https://www.builder.io/blog/qwik-rc-milestone</id>
        <link href="https://www.builder.io/blog/qwik-rc-milestone"/>
        <updated>2023-04-01T04:00:57.355Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.builder.io/blog/qwik-rc-milestone">Qwik Reaches RC Milestone</a></p><p><strong>概要：</strong></p><p>Qwik 发布了 v1 Release Candidate 版本，这是一个重要的里程碑。Qwik 是一款现代化的 Web 应用程序框架，设计用于即时启动应用程序，无论应用程序大小如何。Qwik 使用一种创新的方法，“流式” 地向最终用户传输 JavaScript 块，从而自动消除了其他框架中需要的许多手动性能优化，从而实现更好的开发人员体验。Qwik 采用熟悉、简洁和易于使用的设计，使用众所周知的 JSX 语法、带有 hooks API 风格的函数组件，并通过利用信号实现反应式。 Qwik 的独特 JavaScript 流式处理功能由可恢复执行模型提供支持，实现了无与伦比的用户体验和最高的 Google Core-Web-Vitals 分数。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 Zod 和 JSDoc 进行 JavaScript 类型定义]]></title>
        <id>https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/</id>
        <link href="https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/"/>
        <updated>2023-04-01T04:00:35.354Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/">Types in JavaScript With Zod and JSDoc</a></p><p><strong>概要：</strong></p><p>本文介绍了如何在纯 JavaScript 文件中使用 JSDoc 注释和 Zod 类型库来推断类型。通过这种方法，可以在编写代码时获得类型提示和检查，并在运行时使用类型。这种方法不需要编译、转换或配置任何东西，因此非常适合小型项目。文章还提供了一些示例代码和资源链接，以帮助读者更好地理解和实践这种方法。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Twitter 的推荐算法]]></title>
        <id>https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm</id>
        <link href="https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm"/>
        <updated>2023-04-01T03:57:17.404Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm">Twitter's Recommendation Algorithm</a></p><p><strong>概要：</strong></p><p>Twitter 公布了其推荐算法的工作原理，该算法将每天发布的大约 5 亿条推文缩减到最终出现在用户设备上的少数优质推文。Twitter 的推荐系统由许多相互连接的服务和作业组成，包括从不同的推荐来源提取最佳推文、使用机器学习模型对每个推文进行排名、过滤掉用户已屏蔽的推文等。这篇博客将介绍算法如何为用户的时间轴选择推文。Twitter 还开源了其推荐算法的代码，以提供给用户更多透明度。未来，Twitter 计划提供更多关于推文出现在用户时间轴上的原因的可见性。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是源代码映射？]]></title>
        <id>https://web.dev/source-maps/</id>
        <link href="https://web.dev/source-maps/"/>
        <updated>2023-03-31T14:48:37.426Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://web.dev/source-maps/">What are source maps?</a></p><p><strong>概要：</strong></p><p>本文介绍了源代码映射（source maps）的基本知识，以及它们如何生成和改善调试体验。随着现代网页应用程序变得越来越复杂，开发人员使用各种工具来构建网页，这些工具需要一个构建过程将代码转换成浏览器可以理解的标准 HTML、JavaScript 和 CSS。然而，优化性能的压缩和合并文件会使调试变得更加困难，源代码映射就是为了解决这个问题而存在的。源代码映射是以 “.map” 结尾的文件，包含了关于编译后的代码如何映射回原始代码的重要信息，使开发人员能够轻松地进行调试。大多数构建工具都可以生成源代码映射文件，例如 Vite、webpack、Rollup、Parcel、esbuild 等。此外，源代码映射还支持扩展，开发人员可以自定义字段来帮助集中精力处理代码。但源代码映射也存在一</p>]]></content>
    </entry>
</feed>
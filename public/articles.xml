<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>articles@mdhweekly.com</id>
    <title>MDH Weekly · 深度好文</title>
    <updated>2023-04-06T15:24:09.206Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://mdhweekly.com"/>
    <subtitle>深度好文 from MDH Weekly</subtitle>
    <rights>sorrycc@gmail.com</rights>
    <entry>
        <title type="html"><![CDATA[Chrome 推出 WebGPU - Chrome 开发者]]></title>
        <id>https://developer.chrome.com/blog/webgpu-release/</id>
        <link href="https://developer.chrome.com/blog/webgpu-release/"/>
        <updated>2023-04-06T12:38:50.463Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://developer.chrome.com/blog/webgpu-release/">Chrome ships WebGPU - Chrome Developers</a></p><p><strong>概要：</strong></p><p>Chrome 团队宣布，WebGPU 现在默认在 Chrome 113 中可用，目前处于 Beta 渠道。WebGPU 是一种新的 Web 图形 API，提供了显著的优势，例如相同图形的 JavaScript 工作量大大减少，机器学习模型推断提高了三倍以上。这是由于更灵活的 GPU 编程和访问 WebGL 无法提供的高级功能。此次 WebGPU 的首次发布可在 ChromeOS、macOS 和 Windows 上使用，其他平台的支持将在今年晚些时候推出。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Chakra UI 的未来]]></title>
        <id>https://www.adebayosegun.com/blog/the-future-of-chakra-ui</id>
        <link href="https://www.adebayosegun.com/blog/the-future-of-chakra-ui"/>
        <updated>2023-04-06T12:32:22.229Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.adebayosegun.com/blog/the-future-of-chakra-ui">The future of Chakra UI</a></p><p><strong>概要：</strong></p><p>Chakra UI is a popular open-source component library for building accessible user interfaces (UIs) with React. The project's creator, Segun Adebayo, has announced plans to transition Chakra UI into a "Design System Infrastructure" to meet the changing expectations of component libraries. The plan includes breaking down the monolithic codebase into smaller, independent projects that are framework-agnostic and easy to maintain. Some of the new projects include Panda, a zero-runtime CSS-in-JS system; Zag, a low-level state machine library used to build all the components in Chakra UI; Ark, a headless component library based on Zag.js; and Ultra, a SaaS platform for creating, managing, and distributing design tokens.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么你今天应该写一篇博客文章]]></title>
        <id>https://dzone.com//articles/why-you-should-write-blog-post</id>
        <link href="https://dzone.com//articles/why-you-should-write-blog-post"/>
        <updated>2023-04-06T12:28:53.407Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://dzone.com//articles/why-you-should-write-blog-post">Why You Should Write a Blog Post Today</a></p><p><strong>概要：</strong></p><p>本文列举了维护博客的几个原因，包括技术备忘录、分享知识、职业简历、记录人生和保持联系等。博客可以成为你未来自己的技术备忘录，也可以与他人分享你的发现，同时也是展示你职业能力和价值观的一个平台。此外，博客还可以成为记录你人生的一部分，帮助你保持与远方朋友的联系。无论如何，开始写博客吧，即使你认为自己没有什么好写的或者不够好的写手。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[2023 年从两个角度学习 React]]></title>
        <id>https://www.robinwieruch.de/learning-react/</id>
        <link href="https://www.robinwieruch.de/learning-react/"/>
        <updated>2023-04-05T08:20:21.736Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.robinwieruch.de/learning-react/">Learning React from two Angles in 2023</a></p><p><strong>概要：</strong></p><p>本文讨论了如何在 2023 年学习 React，提出了两种不同的方法：作为一个库或者作为一个框架。新版 React 文档建议使用完全集成的框架（例如 Next.js）而不是像 Vite 或 Parcel 这样的打包工具来使用 React。作者认为，在完全转向框架之前，仍然推荐使用其他 React 入门工具。文章还回顾了过去 10 年 Web 应用程序发展的历程，从服务器端渲染到客户端渲染再到现在的服务器端渲染。最后，作者建议初学者既要学习 React 的基础知识，也要学习如何将其应用于框架中。可以先从框架开始，但遇到 React 的基础知识时，需要回到 React 的文档中去学习。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[从 Webpack 迁移到 Remix]]></title>
        <id>https://remix.run/blog/migrate-from-webpack</id>
        <link href="https://remix.run/blog/migrate-from-webpack"/>
        <updated>2023-04-05T00:43:08.586Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://remix.run/blog/migrate-from-webpack">Migrate from Webpack to Remix</a></p><p><strong>概要：</strong></p><p>Remix 宣布推出基于 Webpack 的编译器和开发服务器，以帮助使用 Webpack 的应用程序逐步迁移到 Remix。该公司表示，这个演示版本可以让用户从第一天开始使用所有的 Webpack 加载器和插件，并逐渐将每个路由迁移到 Remix。Remix 表示，它正在积极支持更多流行的 CSS 模式，但目前还有细节和权衡需要解决，以确保不会影响 Remix 的默认性能。Remix 还提供了一个迁移指南，以帮助 Webpack 用户更容易地进行迁移。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微软从头开始重建了 Teams，承诺提供 2 倍更快的性能。]]></title>
        <id>https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/</id>
        <link href="https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/"/>
        <updated>2023-04-04T06:17:50.245Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://techcrunch.com/2023/03/27/microsoft-rebuilds-teams-promises-2x-faster-performance/">Microsoft rebuilt Teams from the ground up, promises 2x faster performance</a></p><p><strong>概要：</strong></p><p>微软的团队协作工具 Teams 一直以来都因其运行速度慢、资源占用高而声名狼藉。现在，微软推出了全新的 Teams 预览版，微软称这是 “从头重新构想的 Teams”，承诺新应用程序的性能将提高两倍，同时只使用以前的一半内存。加入会议现在应该会快 2 倍，而在聊天和频道之间切换将快 1.7 倍。此外，公司还重新设计了整体用户体验。微软在 1 月份发布的财报中指出，Teams 现在拥有 2.8 亿月活跃用户，这比 2021 年 7 月的 2.5 亿和 2022 年 1 月的 2.7 亿都要多。该公司计划在今年晚些时候向所有用户提供这个新版本的 Teams，但现在正在向选择公司公共预览计划的 Windows 用户推出（尽管管理员可能需要为您的组织启用此功能）。一旦启用，用户可以轻松地在新旧版本之间切换。微软</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Rust 的黄金法则]]></title>
        <id>https://steveklabnik.com/writing/rusts-golden-rule</id>
        <link href="https://steveklabnik.com/writing/rusts-golden-rule"/>
        <updated>2023-04-02T14:09:41.420Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://steveklabnik.com/writing/rusts-golden-rule">Rust's Golden Rule</a></p><p><strong>概要：</strong></p><p>本文介绍了 Rust 的一个设计原则：签名即契约。这个原则指出，当函数体与函数签名相矛盾时，函数签名优先；签名是正确的，函数体是错误的。这个原则使得 Rust 具有模块化和内存安全等优点，但也导致一些问题，如 “借用分裂” 或 “部分借用”。作者认为，这个原则让他在解决问题时更关注函数签名而不是函数体，同时也影响了类型之间的关系和测试驱动开发。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于我的演讲风格的一些想法]]></title>
        <id>https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/</id>
        <link href="https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/"/>
        <updated>2023-04-02T14:09:25.134Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://surfingcomplexity.blog/2023/03/25/some-thoughts-on-my-presentation-style/">Some thoughts on my presentation style</a></p><p><strong>概要：</strong></p><p>这篇文章总结了演讲者如何制作幻灯片，作者的目标是确保每张幻灯片都传达一个概念。他使用单个句子或图像作为背景来实现这一点，并将演讲分成许多小的、独立的 “块”，以便听众可以在下一个块到来时重新定位自己。此外，作者还手绘了所有的图表，并使用了 Deckset 工具生成幻灯片。最后，作者建议演讲者在演讲中引起观众的情感共鸣，而不是试图传达过多的信息。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[头脑风暴提出问题，而不是想法 —— 骡子设计]]></title>
        <id>https://www.muledesign.com/blog/brainstorm-questions</id>
        <link href="https://www.muledesign.com/blog/brainstorm-questions"/>
        <updated>2023-04-02T13:51:07.934Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.muledesign.com/blog/brainstorm-questions">Brainstorm Questions Not Ideas — Mule Design</a></p><p><strong>概要：</strong></p><p>本文指出，我们过分高估了设计中 “想法” 的重要性。有意义的创新建立在对现有概念、对象和情境的新颖联系上，而不是为了自我满足的原创性。我们所赞美的闪光点通常是对世界的敏锐观察，通过批判性思维和评论得到改进。然而，因为许多人在学校和职业生涯中都因为有正确答案和聪明的想法而受到奖励和称赞，设计中的质疑和评论可能会变得非常不舒服。因此，与其沉浸在群体思维的舒适枕头中，还不如开始提出问题。一个快速有效的解决方法是停止与团队一起集思广益，而是开始一起集思广益提出问题。本文提供了一些运行对话的步骤。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[介绍 Socket AI - ChatGPT 驱动的威胁分析 - Socket]]></title>
        <id>https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis</id>
        <link href="https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis"/>
        <updated>2023-04-01T05:32:32.600Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://socket.dev/blog/introducing-socket-ai-chatgpt-powered-threat-analysis">Introducing Socket AI – ChatGPT-Powered Threat Analysis - Socket</a></p><p><strong>概要：</strong></p><p>Socket 宣布推出基于人工智能的源代码分析解决方案，利用 ChatGPT 检查每个 npm 和 PyPI 包。当检测到包中存在潜在问题时，Socket 会将其标记并请求 ChatGPT 对其进行总结。Socket 的 AI 警告应视为建议而非绝对分析，因为 LLMs 的限制意味着跨文件分析等任务仍需持续改进。此外，Socket 还在不断增强静态分析功能，未来预计将进一步整合 LLMs，实现更复杂的 AI 引导分析。Socket 希望通过集中分析，为开发者提供最大的受益和保护，并以最小的成本摊销运行 AI 分析所有共享开源依赖项的费用。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[CSS 遮罩 - Ahmad Shadeed]]></title>
        <id>https://ishadeed.com/article/css-masking/</id>
        <link href="https://ishadeed.com/article/css-masking/"/>
        <updated>2023-04-01T05:23:43.789Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://ishadeed.com/article/css-masking/">CSS Masking - Ahmad Shadeed</a></p><p><strong>概要：</strong></p><p>本文介绍了 CSS 遮罩的定义、用法和几个实际应用案例。遮罩是一种隐藏元素部分内容而不删除它的技术，可以使用形状或渐变来显示或隐藏元素的部分内容。在 CSS 中，有几种方法可以遮罩元素，包括 mask 属性、clip-path 属性和 SVG <mask>。本文主要关注 mask 属性，它类似于 background 属性，并且可以使用图像和渐变进行遮罩。作者提供了许多实际应用案例，包括淡化图像、遮罩文本内容、遮罩列表、有趣的图像效果等。最后，作者推荐了一些进一步学习 CSS 遮罩的资源。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[你并不太老（转向人工智能）]]></title>
        <id>https://www.latent.space/p/not-old</id>
        <link href="https://www.latent.space/p/not-old"/>
        <updated>2023-04-01T05:21:47.837Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.latent.space/p/not-old">You Are Not Too Old (To Pivot Into AI)</a></p><p><strong>概要：</strong></p><p>本文讨论了职业转型的话题，特别是在人工智能领域。作者分享了自己从金融行业转型到软件工程和开发者关系的经历，并提出了一些原因，说明为什么你不会太老而无法进行职业转型。首先，人工智能领域的潜力非常广泛，增长速度很快。其次，学习人工智能的时间比你想象的要短。第三，除了成为专业机器学习研究员外，还有其他许多贡献领域，例如软件工程和产品化。最后，挑战自己对大脑有益，可以帮助建立认知储备，防止神经退行性疾病的发生。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Qwik 达到了 RC 里程碑。]]></title>
        <id>https://www.builder.io/blog/qwik-rc-milestone</id>
        <link href="https://www.builder.io/blog/qwik-rc-milestone"/>
        <updated>2023-04-01T04:00:57.355Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.builder.io/blog/qwik-rc-milestone">Qwik Reaches RC Milestone</a></p><p><strong>概要：</strong></p><p>Qwik 发布了 v1 Release Candidate 版本，这是一个重要的里程碑。Qwik 是一款现代化的 Web 应用程序框架，设计用于即时启动应用程序，无论应用程序大小如何。Qwik 使用一种创新的方法，“流式” 地向最终用户传输 JavaScript 块，从而自动消除了其他框架中需要的许多手动性能优化，从而实现更好的开发人员体验。Qwik 采用熟悉、简洁和易于使用的设计，使用众所周知的 JSX 语法、带有 hooks API 风格的函数组件，并通过利用信号实现反应式。 Qwik 的独特 JavaScript 流式处理功能由可恢复执行模型提供支持，实现了无与伦比的用户体验和最高的 Google Core-Web-Vitals 分数。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[使用 Zod 和 JSDoc 进行 JavaScript 类型定义]]></title>
        <id>https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/</id>
        <link href="https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/"/>
        <updated>2023-04-01T04:00:35.354Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.jim-nielsen.com/2023/types-in-jsdoc-with-zod/">Types in JavaScript With Zod and JSDoc</a></p><p><strong>概要：</strong></p><p>本文介绍了如何在纯 JavaScript 文件中使用 JSDoc 注释和 Zod 类型库来推断类型。通过这种方法，可以在编写代码时获得类型提示和检查，并在运行时使用类型。这种方法不需要编译、转换或配置任何东西，因此非常适合小型项目。文章还提供了一些示例代码和资源链接，以帮助读者更好地理解和实践这种方法。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Twitter 的推荐算法]]></title>
        <id>https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm</id>
        <link href="https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm"/>
        <updated>2023-04-01T03:57:17.404Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.twitter.com/engineering/en_us/topics/open-source/2023/twitter-recommendation-algorithm">Twitter's Recommendation Algorithm</a></p><p><strong>概要：</strong></p><p>Twitter 公布了其推荐算法的工作原理，该算法将每天发布的大约 5 亿条推文缩减到最终出现在用户设备上的少数优质推文。Twitter 的推荐系统由许多相互连接的服务和作业组成，包括从不同的推荐来源提取最佳推文、使用机器学习模型对每个推文进行排名、过滤掉用户已屏蔽的推文等。这篇博客将介绍算法如何为用户的时间轴选择推文。Twitter 还开源了其推荐算法的代码，以提供给用户更多透明度。未来，Twitter 计划提供更多关于推文出现在用户时间轴上的原因的可见性。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是源代码映射？]]></title>
        <id>https://web.dev/source-maps/</id>
        <link href="https://web.dev/source-maps/"/>
        <updated>2023-03-31T14:48:37.426Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://web.dev/source-maps/">What are source maps?</a></p><p><strong>概要：</strong></p><p>本文介绍了源代码映射（source maps）的基本知识，以及它们如何生成和改善调试体验。随着现代网页应用程序变得越来越复杂，开发人员使用各种工具来构建网页，这些工具需要一个构建过程将代码转换成浏览器可以理解的标准 HTML、JavaScript 和 CSS。然而，优化性能的压缩和合并文件会使调试变得更加困难，源代码映射就是为了解决这个问题而存在的。源代码映射是以 “.map” 结尾的文件，包含了关于编译后的代码如何映射回原始代码的重要信息，使开发人员能够轻松地进行调试。大多数构建工具都可以生成源代码映射文件，例如 Vite、webpack、Rollup、Parcel、esbuild 等。此外，源代码映射还支持扩展，开发人员可以自定义字段来帮助集中精力处理代码。但源代码映射也存在一</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[目前，每两个新的 Npm 软件包中就有一个是 SEO 垃圾邮件。]]></title>
        <id>https://blog.sandworm.dev/one-in-two-new-npm-packages-is-seo-spam-right-now</id>
        <link href="https://blog.sandworm.dev/one-in-two-new-npm-packages-is-seo-spam-right-now"/>
        <updated>2023-03-31T14:46:19.968Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://blog.sandworm.dev/one-in-two-new-npm-packages-is-seo-spam-right-now">One In Two New Npm Packages Is SEO Spam Right Now</a></p><p><strong>概要：</strong></p><p>据报道，超过一半（约 185,000 个）提交到 npm 的新软件包都是 SEO 垃圾邮件。这些空软件包只有一个 README 文件，其中包含指向各种恶意网站的链接。大多数垃圾邮件软件包来自一个针对俄语用户的 Telegram 频道。这些软件包的名称设置为与各种敏感主题的搜索匹配，如乌克兰战争或俄罗斯天然气公司的投资决策。另外，还出现了承诺免费 Fortnite V-Bucks 的虚假软件包。研究人员正在将所有已识别的垃圾邮件软件包报告给 npm。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何拥有充裕的时间]]></title>
        <id>https://world.hey.com/dhh/how-to-have-buckets-of-time-38693993</id>
        <link href="https://world.hey.com/dhh/how-to-have-buckets-of-time-38693993"/>
        <updated>2023-03-31T14:10:41.035Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://world.hey.com/dhh/how-to-have-buckets-of-time-38693993">How to have buckets of time</a></p><p><strong>概要：</strong></p><p>本文介绍了一种管理时间的技巧，即将相关任务放入一个桶中，让这个桶积累直到满，然后一次性处理。这与试图在数不清的打断管道中捕捉每个任务形成对比，如果你让它们滴答滴答地流逝，它们会将你的一天淹没。作者强调，时间并不是稀缺资源，注意力才是，找到你的桶，培养耐心让它们填满，然后逐个清空。这是 10 倍生产力的窍门。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布 react-router@6.10.0・remix-run/react-router]]></title>
        <id>https://github.com/remix-run/react-router/releases/tag/react-router%406.10.0</id>
        <link href="https://github.com/remix-run/react-router/releases/tag/react-router%406.10.0"/>
        <updated>2023-03-31T05:26:36.504Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/remix-run/react-router/releases/tag/react-router%406.10.0">Release react-router@6.10.0 · remix-run/react-router</a></p><p><strong>概要：</strong></p><p>React Router 6.10.0 发布，增加了一些数据路由标志，包括 future.v7_normalizeFormMethod，可以将 useNavigation () 和 useFetcher () 的 formMethod 字段规范化为大写 HTTP 方法，以与 fetch ()（以及某些 Remix）行为对齐。此外，还修复了一些错误，并更新了 @remix-run/web-fetch@4.3.3。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[成为一名千倍工程师或者不惜一切尝试。]]></title>
        <id>https://kadekillary.work/posts/1000x-eng/</id>
        <link href="https://kadekillary.work/posts/1000x-eng/"/>
        <updated>2023-03-30T00:58:12.217Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://kadekillary.work/posts/1000x-eng/">become a 1000x engineer or die tryin'</a></p><p><strong>概要：</strong></p><p>本文介绍如何通过一系列命令行包装函数来使用 OpenAI API 提高程序员的生产力。作者首先介绍了如何获取 OpenAI API 密钥，然后演示了如何使用 API 来回答各种问题、生成数据集、创建图像等。作者认为，未来的开发者生产力将会是一个重要的竞争优势，而采用借助人工智能的工作流程可能会更加高效。虽然这并不意味着程序员将被替代，但它提供了一种解决模糊领域中更大问题的有趣新方法。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[宣布罗马 v12 版本发布]]></title>
        <id>https://rome.tools/blog/2023/03/28/rome12/</id>
        <link href="https://rome.tools/blog/2023/03/28/rome12/"/>
        <updated>2023-03-30T00:31:32.694Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://rome.tools/blog/2023/03/28/rome12/">Announcing Rome v12</a></p><p><strong>概要：</strong></p><p>Rome 版本 12 已推出，新增了 JSON 支持、新的 lint 规则、导入排序等功能。Rome 现在支持 JSON 文件，用户可以通过 CLI 或 LSP 格式化 JSON 文件，并在解析 JSON 文件时使用 Rome 的诊断工具。此外，Rome 还支持 TypeScript 4.7 和 TypeScript 5.0 的所有新功能。该版本还提供了导入排序功能，用户可以通过配置文件控制该功能。Rome 还增强了配置文件的诊断和恢复功能，以及自动发现配置文件和指定配置文件路径的功能。该版本还添加了新的 lint 规则和更多配置选项。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[从 Create React App (CRA) 迁移到 Vite]]></title>
        <id>https://www.robinwieruch.de/vite-create-react-app/</id>
        <link href="https://www.robinwieruch.de/vite-create-react-app/"/>
        <updated>2023-03-29T09:29:25.243Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.robinwieruch.de/vite-create-react-app/">Migrate to Vite from Create React App (CRA)</a></p><p><strong>概要：</strong></p><p>本文介绍了如何将现有的 Create React App（CRA）项目迁移到 Vite，以创建一个现代的 React 单页应用程序。作者提供了一份快速迁移指南，包括安装 Vite 和相关依赖、更改 package.json 文件中的脚本、重命名 JSX 文件的扩展名等步骤。此外，如果需要保留 ESLint、TypeScript、react-testing-library 等配置，作者还提供了相应的教程链接。最后，作者列举了一些可能出现的问题及其解决方案。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为什么工程师需要写作]]></title>
        <id>https://www.developing.dev/p/why-engineers-need-to-write</id>
        <link href="https://www.developing.dev/p/why-engineers-need-to-write"/>
        <updated>2023-03-29T02:58:58.691Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.developing.dev/p/why-engineers-need-to-write">Why Engineers Need To Write</a></p><p><strong>概要：</strong></p><p>本文讨论了写作在软件工程中的重要性。软件工程师需要写技术问题、代码评论和设计文档等，因为编写软件是协作的过程。优秀的写作能力可以提高软件工程师的效率和影响力。此外，写作还是影响他人最可扩展的方式之一。即使未来 AI 工具可以代替我们写作，写作仍然有价值，因为它可以强制将思维转化为连贯的逻辑叙述，同时也能够激发更多的创意。因此，写作对于软件工程师来说是一项必备技能。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[v3.3：扩展的颜色调色板、ESM/TS 支持、逻辑属性等 - Tailwind CSS]]></title>
        <id>https://tailwindcss.com/blog/tailwindcss-v3-3</id>
        <link href="https://tailwindcss.com/blog/tailwindcss-v3-3"/>
        <updated>2023-03-29T02:03:43.886Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://tailwindcss.com/blog/tailwindcss-v3-3">Tailwind CSS v3.3: Extended color palette, ESM/TS support, logical properties, and more - Tailwind CSS</a></p><p><strong>概要：</strong></p><p>Tailwind CSS 发布了 3.3 版本，带来了用户一直期待的一些新功能以及一些未知但有用的新功能。其中包括扩展颜色调色板、ESM 和 TypeScript 支持、简化 RTL 支持、精细调整渐变颜色停止位置、一键截断多行文本、新的行高修改器、无 var () 的 CSS 变量、可配置字体变量设置、新的列表样式图像工具和连字符工具等。此外，该版本还添加了更多的逻辑属性实用程序，以便在 LTR 和 RTL 语言之间进行样式设置。升级项目只需从 npm 安装最新版本即可。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[一个完整的视觉指南，帮助理解 Node.js 事件循环]]></title>
        <id>https://www.builder.io/blog/visual-guide-to-nodejs-event-loop</id>
        <link href="https://www.builder.io/blog/visual-guide-to-nodejs-event-loop"/>
        <updated>2023-03-29T01:11:57.940Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://www.builder.io/blog/visual-guide-to-nodejs-event-loop">A Complete Visual Guide to Understanding the Node.js Event Loop</a></p><p><strong>概要：</strong></p><p>本文介绍了 Node.js 事件循环的视觉指南。文章首先回顾了 JavaScript 中的异步编程，然后介绍了 Node.js 运行时和其核心组件之一的 libuv 库。接着，文章解释了在 Node.js 运行时中代码执行的过程，并探讨了 libuv 如何处理异步操作。最后，文章详细介绍了事件循环的工作原理和不同队列的优先级顺序。通过这篇文章，读者可以更好地理解 Node.js 事件循环，从而编写出更高效的应用程序。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Next.js 和 Rust：全栈开发的创新方法]]></title>
        <id>https://joshmo.hashnode.dev/nextjs-and-rust-an-innovative-approach-to-full-stack-development</id>
        <link href="https://joshmo.hashnode.dev/nextjs-and-rust-an-innovative-approach-to-full-stack-development"/>
        <updated>2023-03-29T01:11:41.118Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://joshmo.hashnode.dev/nextjs-and-rust-an-innovative-approach-to-full-stack-development">Next.js and Rust: An Innovative Approach to Full-Stack Development</a></p><p><strong>概要：</strong></p><p>Shuttle, a cloud development platform, has released a Node.js CLI package that allows users to quickly create an application with a Rust backend using Axum, a popular Rust web framework. The article focuses on the Rust side of the app, which is a notes app with a login portal that can register users and reset passwords. The frontend uses React.js/Next.js. Shuttle simplifies deployment by allowing users to define infrastructure directly in their code without the need for external files. The article provides step-by-step instructions on how to set up the backend, including creating a router and adding CRUD functionality. Deployment with shuttle is also covered.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[宣布 GitHub Actions 扩展适用于 VS Code | GitHub 博客]]></title>
        <id>https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/</id>
        <link href="https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/"/>
        <updated>2023-03-29T01:07:07.609Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.blog/2023-03-28-announcing-the-github-actions-extension-for-vs-code/">Announcing the GitHub Actions extension for VS Code | The GitHub Blog</a></p><p><strong>概要：</strong></p><p>GitHub 发布了官方的 GitHub Actions VS Code 扩展程序的公共测试版。该扩展程序支持编写和编辑工作流程，并帮助用户管理工作流程运行，无需离开 IDE。使用该扩展程序，用户可以在不离开编辑器的情况下管理工作流程，轻松监控存储库中的工作流程运行，取消和重新运行它们，或者为手动触发的工作流程触发新的运行。此外，用户还可以列出所有受支持级别（组织、存储库和环境）的可用密钥和变量。扩展程序提供了语法高亮、集成文档、验证和代码完成等功能，以提高编辑工作流程的体验。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[介绍 Nuxt DevTools・Nuxt]]></title>
        <id>https://nuxt.com/blog/introducing-nuxt-devtools</id>
        <link href="https://nuxt.com/blog/introducing-nuxt-devtools"/>
        <updated>2023-03-28T15:22:48.486Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://nuxt.com/blog/introducing-nuxt-devtools">Introducing Nuxt DevTools · Nuxt</a></p><p><strong>概要：</strong></p><p>Nuxt DevTools 是一种新工具，旨在帮助开发人员了解 Nuxt 应用程序并进一步提高开发体验。该工具提供了更好的透明度，可以找到性能瓶颈并帮助您管理应用程序和配置。它作为实验性模块发布，并在安装后添加一个小图标，点击它将打开 DevTools 面板。该工具包括许多功能，如页面、组件、导入、模块、挂钩、应用程序配置、负载和数据、终端等。Nuxt DevTools 还可以扩展，允许模块贡献其自己的视图，以提供其集成的交互式数据和游乐场。未来，Nuxt DevTools 计划添加更多功能，同时探索以更直观和有趣的方式呈现数据的方法。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[发布 v8.0.0・pnpm/pnpm]]></title>
        <id>https://github.com/pnpm/pnpm/releases/tag/v8.0.0</id>
        <link href="https://github.com/pnpm/pnpm/releases/tag/v8.0.0"/>
        <updated>2023-03-28T14:23:03.802Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://github.com/pnpm/pnpm/releases/tag/v8.0.0">Release v8.0.0 · pnpm/pnpm</a></p><p><strong>概要：</strong></p><p>pnpm 发布了最新版本 v8，其中包括一些重要的更改和更新。首先，不再支持 Node.js 14，但是 pnpm 会随着 Node.js 一起打包，因此无论您安装哪个 Node.js 版本，pnpm 都将使用必要的 Node.js 运行时。其次，大多数配置更改与对等依赖关系有关，其中 auto-install-peers、dedupe-peer-dependents 和 resolve-peers-from-workspace-root 等设置已默认启用。此外，还采用了 Lockfile v6，该格式通过从软件包 ID 中删除哈希来提高锁定文件的可读性，并对导入器部分中的字段进行了一些重新排列。同时，pnpm-lock.yaml 文件也更加抗 git 合并冲突。最后，直接依赖项现在会被去重，如果一个依赖项同时存在于项目和工作区根目录中，则只会链接到工作区根目录。</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于 Svelte 的想法]]></title>
        <id>https://tyhopp.com/notes/thoughts-on-svelte</id>
        <link href="https://tyhopp.com/notes/thoughts-on-svelte"/>
        <updated>2023-03-28T04:41:01.088Z</updated>
        <content type="html"><![CDATA[<p><strong>原文：</strong></p><p><a href="https://tyhopp.com/notes/thoughts-on-svelte">Thoughts on Svelte</a></p><p><strong>概要：</strong></p><p>本文介绍了作者在一个月内使用 Svelte 和 SvelteKit 构建个人 RSS 阅读器的经验，并分享了对 Svelte 的看法。作者认为 Svelte 的组件格式、内置存储和事件分发 API 是其优点，但反应语句、等待块和过渡动画 API 则是其缺点。作者表示，Svelte 适合个人项目，但可能不适合大型企业项目。最后，作者更新了一些评论，解决了对过渡动画 API 的疑虑。</p>]]></content>
    </entry>
</feed>